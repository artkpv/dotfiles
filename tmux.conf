setw -g mode-keys vi 

# Use other prefix.
# unbind-key C-b
# set -g prefix 'C-\'
# bind-key 'C-\' send-prefix
bind-key    C-b send-prefix

# Use - to create vertical splits.
bind - split-window -v
unbind '%'

# Use | to create horizontal splits.
bind | split-window -h
unbind '"'

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

#set-option -g default-command "exec zsh"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-b\' if-shell \"$is_vim\" 'send-keys C-b\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-b\' if-shell \"$is_vim\" 'send-keys C-b\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-b' select-pane -l

# To prevent 1 sec delay on pressing ESC in vim and other.
set -s escape-time 0

# if run as "tmux attach", create a session if one does not already exist
#new-session -n $HOST

# To enable focus events in (Neo)Vim
# See https://vi.stackexchange.com/questions/18515/nvim-can-not-detect-focus-change-inside-tmux-sessions
set-option -g focus-events on


# Turn mouse support one (mouse mode)
set -g mouse on

# Copying with Vim bindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
# Copying into system clipboard
bind-key -T copy-mode-vi y send-keys -X copy-pipe 'xclip -in -selection clipboard > /dev/null'






# => The looks (solarized 256) -------------------------------------------- {{{1

# default statusbar colors
set-option -g status-bg colour235 # base02
set-option -g status-fg colour136 # yellow

# default window title colors
set-window-option -g window-status-style fg=colour244,bg=default

# active window title colors
set-window-option -g window-status-current-style fg=colour166,bg=default

# pane border
set-option -g pane-border-style fg=colour235
set-option -g pane-active-border-style fg=colour240

# message text
set-option -g message-style bg=colour235,fg=colour166

# pane number display
set-option -g display-panes-active-colour colour33 # blue
set-option -g display-panes-colour colour166 # orange

# clock
set-window-option -g clock-mode-colour colour64 # green



# Neovim checkhelp adviced to change it. See https://github.com/neovim/neovim/wiki/FAQ#home-or-some-other-special-key-doesnt-work
set-option -g default-terminal screen-256color


# => TMUX Plug Manager -------------------------------------------- {{{1
# https://github.com/tmux-plugins/tpm
# List of plugins
# Depends on git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-resurrect'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'


